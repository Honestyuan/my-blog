(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{544:function(a,e,s){"use strict";s.r(e);var t=s(2),n=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"get请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get请求"}},[a._v("#")]),a._v(" GET请求：")]),a._v(" "),s("p",[a._v("GET请求的参数使用问号追加到URL的结尾,后米纳给这用&好连接起来的名称/值.例如:\nhttp://www.somewhere.com/page.php?name1=value1&name2=value2&name3=value3\n每个名称和值都是在编码后才能用在URL中（在javaScript中可以用encodeURIComponent()进行编码）。URL最大长度为2048字符（2KB）。问好后米纳的内容成为查询字符串，这些参数可以在服务器端的页面中读取。\n要用XMLHTTP请求对象发送一个GET请求。只需将URL（包含所有的参数）传入open()方法。同时第一个参数段设为”get”:\noRequest.open(“get”, “http://www.somewhere.com/page.php?name=value”, false);\n因为参数必须逐家到URL的末尾，所以最好用一个函数来处理此细节：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Function addURLParam(sURL, sParamName, sParamName){\n         sURL += (sURL.indexOf(“?”) == -1 ? “?” : “&”);\n         sURL += encodeURIComponent(sParamName) + “=” + encodeURIComponent(sParamName);\n         return sURL;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("三个参数分别为：要添加的URL，参数名称和参数值。")]),a._v(" "),s("h2",{attrs:{id:"post请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post请求"}},[a._v("#")]),a._v(" POST请求：")]),a._v(" "),s("p",[a._v("POST请求通常用于提交数据，比GET请求可以发送更多的数据（大约2GB）。\n构造POST的请求参数的函数：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Function addPostParam(sParams, sParamName, sParamValue){\n         if(sParams.length>0){sParams += “&”};\n         return sParams +encodeURIComponent(sParamName) + “=”encodeURIComponent(sParamName);\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("接下来为了能使POST请求的服务器端页面正确的解释有此函数构造的参数字符串，需要将POST请求首部“Content-Type”设置为“application/x-www-urlencoded”，所以需要使用setRequestHeader()方法设置这个首部：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var sParams = ‘ ‘;\nsParams = addPostParam();\noRequest.open(“post”, “page.php”, false);\nsRequest.setRequestHeader(“Content-Type”, “application/x-www-form-urlencoded”);\nsRequest.send(sParams);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("现在这个例子就可以像由浏览器中提交表单一样正常工作了。\nFORM中的get post方法区别Form中的get和post方法，在数据传输过程中分别对应了HTTP协议中的GET和POST方法。")]),a._v(" "),s("h2",{attrs:{id:"二者主要区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二者主要区别"}},[a._v("#")]),a._v(" 二者主要区别")]),a._v(" "),s("p",[a._v("1、Get是用来从服务器上获得数据，而Post是用来向服务器上传递数据。\n2、 Get将表单中数据的按照variable=value的形式，添加到action所指向的URL后面，并且两者使用“?”连接，而各个变量之间使用 “&”连接；Post是将表单中的数据放在form的数据体中，按照变量和值相对应的方式，传递到action所指向URL。\n3、 Get是不安全的，因为在传输过程，数据被放在请求的URL中，而如今现有的很多服务器、代理服务器或者用户代理都会将请求URL记录到日志文件中，然后 放在某个地方，这样就可能会有一些隐私的信息被第三方看到。另外，用户也可以在浏览器上直接看到提交的数据，一些系统内部消息将会一同显示在用户面前。 Post的所有操作对用户来说都是不可见的。\n4、Get传输的数据量小，这主要是因为受URL长度限制；而Post可以传输大量的数据，所以在上传文件只能使用Post（当然还有一个原因，将在后面的提到）。\n5、Get限制Form表单的数据集的值必须为ASCII字符；而Post支持整个ISO10646字符集。\n6、Get是Form的默认方法。")])])}),[],!1,null,null,null);e.default=n.exports}}]);